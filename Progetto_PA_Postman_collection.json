{
	"info": {
		"_postman_id": "a3864022-02ef-4bf9-ad93-b4a7a19ccdbb",
		"name": "Integration testing basics",
		"description": "# ‚õìÔ∏è Get started here\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n    \n- POST `/unregister`\n    \n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## üîñ **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n    \n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## ‚ÑπÔ∏è Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33770463",
		"_collection_link": "https://gold-sunset-311955.postman.co/workspace/progettoPA~de768e33-a39c-44f9-b594-1cf73948d08e/collection/33770463-a3864022-02ef-4bf9-ad93-b4a7a19ccdbb?action=share&source=collection_link&creator=33770463"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login utente",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"marco.rossi@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login utente Automobilista",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"laura.bianchi@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login utente error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"marco.rossi@example.com\",\r\n  \"password\": \"passwor123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login utente errorType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"marco.rossiexample.com\",\r\n  \"password\": 123\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login varco",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Via Roma\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/passageLogin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"passageLogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login varco error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Via Rome\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/passageLogin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"passageLogin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login varco errorType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": 22\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/passageLogin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"passageLogin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mario\",\r\n    \"surname\": \"Rossi\",\r\n    \"email\": \"mario.rossi@esempio.com\",\r\n    \"password\": \"passwor123\",\r\n    \"role\": \"operatore\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Parkings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"parcheggio Poste\",\r\n    \"parking_spots\": 125,\r\n    \"occupied_spots\": 125,\r\n    \"day_starting_hour\": \"08:00:00\",\r\n    \"day_finishing_hour\": \"20:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Passages",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parking_id\": 6,\r\n    \"name\": \"Viale Trento\",\r\n    \"entrance\": true,\r\n    \"exit\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/passages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"passages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Fees",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parking_id\": 1,\r\n    \"name\": \"Tariffa Festiva Notturna Moto\",\r\n    \"hourly_amount\": 3,\r\n    \"vehicle_type\": \"Moto\",\r\n    \"night\": true,\r\n    \"festive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/fees",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"fees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Transits",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 5,\r\n    \"plate\": \"STU901V\",\r\n    \"passing_by_date\": \"2024-08-30\",\r\n    \"passing_by_hour\": \"21:55:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Parkings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/parkings/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Passages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/passages/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"passages",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Fees",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/fees/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"fees",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Transits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/transits/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Marioooo\",\r\n    \"email\": \"mario.rossi@esempio.com\",\r\n    \"password\": \"passwor1234\",\r\n    \"role\": \"automobilista\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Parkings",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"parcheggio Modificato\",\r\n    \"occupied_spots\": 90,\r\n    \"day_starting_hour\": \"08:00:00\",\r\n    \"day_finishing_hour\": \"20:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Passages",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Viale Trento\",\r\n    \"entrance\": false,\r\n    \"exit\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/passages/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"passages",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Fees",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parking_id\": 2,\r\n    \"name\": \"Tariffa Festiva Moto\",\r\n    \"night\": true,\r\n    \"festive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/fees/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"fees",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Transits",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 5,\r\n    \"plate\": \"STU901D\",\r\n    \"passing_by_hour\": \"21:55:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delate User",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delate Parkings",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delate Passages",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/passages/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"passages",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delate Fees",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/fees/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"fees",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delate Transits",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits",
								"12"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmNvLnJvc3NpQGV4YW1wbGUuY29tIiwibmFtZSI6Ik1hcmNvIiwic3VybmFtZSI6IlJvc3NpIiwicm9sZSI6Im9wZXJhdG9yZSIsImlhdCI6MTcyMTQ2MzQ4NiwiZXhwIjoxNzIxNDY3MDg2fQ.8AvQxyqZS464Om2Q1A_L0GftWYdbX3xcmNRxUHCVuwc",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Stats",
			"item": [
				{
					"name": "Transit Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/transitReport?plates=AB123CD,EF456GH,QR345ST&startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32&format=json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transitReport"
							],
							"query": [
								{
									"key": "plates",
									"value": "AB123CD,EF456GH,QR345ST"
								},
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								},
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Park Average Vacancies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/generalParkStats/parkAverageVacancies?startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32&format=json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"generalParkStats",
								"parkAverageVacancies"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								},
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Park Revenues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/generalParkStats/parkRevenues?startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32&format=json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"generalParkStats",
								"parkRevenues"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								},
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Park Transit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/singleParkStats/nTransits/1?startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"singleParkStats",
								"nTransits",
								"1"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Park Revenues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/singleParkStats/parkRevenues/1?startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"singleParkStats",
								"parkRevenues",
								"1"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Error",
			"item": [
				{
					"name": "Login Bad Request",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"marco.rossi@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "JWT Not Valid",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"marco.rossi@example.com\",\r\n  \"password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Not Autorized Plates",
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{\r\n  \"email\": \"laura.bianchi@example.com\",\r\n  \"password\": \"password123\",\r\n  \"surname\": \"Bianchi\",\r\n  \"role\": \"automobilista\"\r\n}",
									"type": "string"
								},
								{
									"key": "secret",
									"value": "FJXp3BKZ49",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/transitReport?plates=AB123CD,EF456GH,QR345ST&startDate=2024-03-12 10:50:54&endDate=2024-06-15 07:15:32&format=json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transitReport"
							],
							"query": [
								{
									"key": "plates",
									"value": "AB123CD,EF456GH,QR345ST"
								},
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 07:15:32"
								},
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User Not Autorized",
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "payload",
									"value": "{\r\n  \"email\": \"laura.bianchi@example.com\",\r\n  \"password\": \"password123\",\r\n  \"surname\": \"Bianchi\",\r\n  \"role\": \"automobilista\"\r\n}",
									"type": "string"
								},
								{
									"key": "secret",
									"value": "FJXp3BKZ49",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/passages/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"passages",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resource Not Found Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"parcheggio Duomo\",\r\n    \"occupied_spots\": 125,\r\n    \"day_starting_hour\": \"08:00:00\",\r\n    \"day_finishing_hour\": \"20:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Date Format",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 5,\r\n    \"plate\": \"STU901V\",\r\n    \"passing_by_date\": \"2024-08-\",\r\n    \"passing_by_hour\": \"21:55:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Hour Format",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 5,\r\n    \"plate\": \"STU901V\",\r\n    \"passing_by_date\": \"2024-08-30\",\r\n    \"passing_by_hour\": \"21:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Date Hour",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/generalParkStats/parkRevenues?startDate=2024-03-12 10:50:54&endDate=2024-06-15 15:32&format=json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"generalParkStats",
								"parkRevenues"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-03-12 10:50:54"
								},
								{
									"key": "endDate",
									"value": "2024-06-15 15:32"
								},
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Format",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings/pippo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings",
								"pippo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Not Found",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 5,\r\n    \"plate\": \"STU901D\",\r\n    \"passing_by_hour\": \"21:55:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/pippo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"pippo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Parking Full",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passage_id\": 1,\r\n    \"plate\": \"STU901V\",\r\n    \"passing_by_date\": \"2024-08-30\",\r\n    \"passing_by_hour\": \"21:55:25\",\r\n    \"direction\": \"E\",\r\n    \"vehicle_type\": \"Camion\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/transits",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"transits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resource Already Present",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"parcheggio Stazione\",\r\n    \"parking_spots\": 125,\r\n    \"occupied_spots\": 125,\r\n    \"day_starting_hour\": \"08:00:00\",\r\n    \"day_finishing_hour\": \"20:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/parkings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"parkings"
							]
						}
					},
					"response": []
				}
			],
			"description": "**JWT Test**\n\nLogin Bad Request - No Auth\n\nJWT Not Valid - No Auth\n\nUser Not Autorized - automobilista",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "payload",
				"value": "{\r\n  \"email\": \"marco.rossi@example.com\",\r\n  \"password\": \"password123\",\r\n  \"surname\": \"Rossi\",\r\n  \"role\": \"operatore\"\r\n}",
				"type": "string"
			},
			{
				"key": "secret",
				"value": "FJXp3BKZ49",
				"type": "string"
			},
			{
				"key": "algorithm",
				"value": "HS256",
				"type": "string"
			},
			{
				"key": "isSecretBase64Encoded",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}